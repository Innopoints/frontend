@import "_mixins.scss";
@import "_variables.scss";

/* Badges -------------------------------------- */

$badge-bg: lighten($danger, 25%);

.badge {
  position: relative;

  &::after {
    position: absolute;
    top: -3px;
    right: -2px;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: $badge-bg;
    box-shadow: $shadow-raised;
    content: "";
  }

  &.hidden::after {
    display: none;
  }

  .icon {
    display: block;
  }
}

/* Typography -------------------------------------- */

$link-visited: darken(#660078, 5%);

.headline {
  color: $main;
  font-size: 1.5rem;
  font-weight: 500;
  margin-bottom: .2em;
}

.subhead {
  font-weight: 300;
  font-size: .95rem;
  line-height: 1.2rem;
}

h1 {
  color: $main;
  font-size: 1.4rem;
  font-weight: 500;
  margin: 0 0 .5em 0;
}

h2 {
  color: $main;
  font-size: 1.3rem;
  font-weight: 500;
  margin: 0 0 .4em 0;
}

h3 {
  font-size: 1.15rem;
  font-weight: 500;
  margin: 0 0 .3em 0;
}

p {
  margin: 0;
  line-height: 1.2em;
}

strong {
  font-weight: 500;
}

.label {
  text-transform: uppercase;
  color: $main;
  font-weight: 500;
  font-size: .8rem;

  &.small {
    font-size: .7rem;
  }
}

a {
  color: $main;

  &:visited {
    color: $link-visited;
  }
}

@media only screen and (min-width: 640px) {
  .headline {
    font-size: 1.9rem;
  }

  .subhead {
    font-size: 1rem;
    line-height: 1.25rem;
  }

  h1 {
    font-size: 1.55rem;
  }

  h2 {
    font-size: 1.4rem;
  }

  h3 {
    font-size: 1.25rem;
  }
}

@media only screen and (min-width: 840px) {
  .headline {
    font-size: 2rem;
  }

  .subhead {
    font-size: 1.1rem;
    line-height: 1.4rem;
  }

  h1 {
    font-size: 1.7rem;
  }

  h2 {
    font-size: 1.5rem;
  }

  h3 {
    font-size: 1.35rem;
  }
}

@media only screen and (min-width: 1024px) {
  .headline {
    font-size: 2.1rem;
  }

  .subhead {
    font-size: 1.2rem;
    line-height: 1.6rem;
  }

  h1 {
    font-size: 1.8rem;
  }
}

@media only screen and (min-width: 1200px) {
  .headline {
    font-size: 2.2rem;
  }
}

/* Dividers -------------------------------------- */

hr {
  border: 0 solid $light-gray;
  border-top-width: 1px;
  margin-top: 1em;
  width: 100%;

  &[data-text] {
    position: relative;
    overflow: visible;

    &::after {
      content: attr(data-text);
      background: #fff;
      padding: 0 .4em;
      position: absolute;
      top: 0;
      left: 50%;
      transform: translate(-50%, -55%);
      font-size: .85rem;
    }
  }
}

/* Buttons -------------------------------------- */

.btn {
  font-family: $font-face;
  font-weight: 500;
  font-size: 1rem;
  color: $main;
  text-decoration: none;
  outline: none;
  background: none;
  padding: .8em 1.1em;
  border-radius: 1.5625em;
  display: flex;
  align-items: center;
  cursor: pointer;

  .ripple {
    background: transparentize($main, .9);
  }

  &::-moz-focus-inner {
    border: 0;
  }

  &:visited {
    color: $main;
  }

  &.normal {
    color: $dark;

    & > svg {
      stroke: black;
    }

    .ripple {
      background: transparentize(black, .9);
    }
  }

  &.danger {
    color: $danger;

    & > svg {
      stroke: $danger;
    }

    .ripple {
      background: transparentize($danger, .9);
    }
  }

  &.rectangle {
    border-radius: 15px;
    padding: 1.2em;
    font-size: 1.1rem;
  }

  &.filled {
    background: $main;
    background: linear-gradient(0deg, $main 0%, lighten($main, 5%) 100%);
    box-shadow: $shadow-1;
    color: #fff;

    &:hover:not(:disabled), &:focus {
      background: lighten($main, 2%);
      background: linear-gradient(0deg, lighten($main, 2%) 0%, lighten($main, 7%) 100%);
      box-shadow: $shadow-raised;
    }

    &:focus:not(:disabled) {
      background: lighten($main, 4%);
      background: linear-gradient(0deg, lighten($main, 5%) 0%, lighten($main, 10%) 100%);
    }

    &.danger {
      background: $danger;
      background: linear-gradient(0deg, $danger 0%, lighten($danger, 5%) 100%);

      &:hover:not(:disabled), &:focus {
        background: lighten($danger, 2%);
        background: linear-gradient(0deg, lighten($danger, 2%) 0%, lighten($danger, 7%) 100%);
      }

      &:focus:not(:disabled) {
        background: lighten($danger, 4%);
        background: linear-gradient(0deg, lighten($danger, 5%) 0%, lighten($danger, 10%) 100%);
      }
    }

    &:disabled {
      background: $disabled-bg;
      box-shadow: none;
    }

    & > svg {
      stroke: white;
    }

    .ripple {
      background: transparentize(#fff, .75);
    }
  }

  &.outline {
    border: 1px solid $main;

    &.danger {
      border-color: $danger;
    }

    &.normal {
      border-color: $dark;
    }

    &:disabled {
      border-color: $disabled-bg;
    }
  }

  &:hover:not(:disabled) {
    &, &.outline {
      background: transparentize($main, .95);
    }

    &.danger, &.outline.danger {
      background: transparentize($danger, .95);
    }

    &.normal, &.outline.normal {
      background-color: transparentize(black, .95);
    }
  }

  &:focus:not(:disabled) {
    &, &.outline {
      background-color: transparentize($main, .88);
    }

    &.danger, &.outline.danger {
      background: transparentize($danger, .88);
    }

    &.normal, &.outline.normal {
      background-color: transparentize(black, .88);
    }
  }

  &:disabled {
    color: $disabled;
    background-color: transparent;
    cursor: default;

    & > svg {
      stroke: $disabled;
    }
  }

  &.round {
    padding: .7em;
  }

  & > svg {
    stroke: $main;
  }
}

button.btn {
  border: none;
}

/* Text Fields -------------------------------------- */

.text-field {
  input[type="search"]::-webkit-search-cancel-button {
    position: relative;
    top: 1px;
    -webkit-appearance: none;
    height: 20px;
    width: 20px;
    border: 3px solid transparent;
    background: url('../../images/icons/x.svg');
    background-size: contain;
    cursor: pointer;
    border-radius: 50%;

    &:hover {
      background-color: transparentize(black, .9);
    }
  }

  input, textarea {
    outline: none;
    padding: 0 10px 1px;
    font-family: $font-face;
    font-size: 1rem;
    font-weight: 300;
    box-sizing: border-box;
    border: 0 solid $textfield-border;
    border-bottom-width: 1px;
    background-color: $textfield-bg;
    border-top-left-radius: 6px;
    border-top-right-radius: 6px;
    width: 100%;
    height: 2.8em;

    &:hover {
      background-color: darken($textfield-bg, 3%);
    }

    &:hover:disabled {
      background-color: lighten($textfield-bg, 1%);
    }

    &:focus {
      background-color: darken($textfield-bg, 8%);
      border-bottom-width: 2px;
      border-color: lighten($main, 4%);
      padding-bottom: 0;
    }
  }

  input:disabled, textarea:disabled {
    background-color: lighten($textfield-bg, 1%);
    border-color: transparentize(black, .8);
    color: $disabled;
  }

  textarea {
    padding: .75rem .625rem .0625rem;
    height: 6em;
  }

  &.with-item {
    position: relative;

    &.left {
      flex-direction: row-reverse;

      input, textarea {
        padding-left: 3rem;
      }

      input[type="search"] {
        padding-left: 2.2em;
      }

      & > .item {
        left: 10px;
        font-weight: 500;
      }
    }

    &.right {
      input, textarea {
        padding-right: 30px;
        text-align: right;
      }

      & > .item {
        right: 10px;
      }
    }

    & > .item {
      color: #7a7a7a;
    }

    & > input:focus + .item {
      color: $main;
      stroke: $main;

      svg {
        stroke: $main;
      }
    }

    &.right-align input {
      text-align: right;
    }

    input[type="number"] {
      -moz-appearance: textfield;

      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }
    }

    & > .item {
      height: 1.1rem;
      position: absolute;
      top: .85rem;
    }

    & > svg.item {
      height: 1rem;
      top: .9rem;
    }

    input:invalid + svg.item {
      stroke: $danger;
    }
  }

  &.outline {
    position: relative;

    label {
      background-color: #fff;
      color: $textfield-border;
      padding: 0 4px;
      position: absolute;
      top: 0;
      left: 1.4rem;
      transform: translate(-4px, -55%);
      border-radius: 5px;
    }

    &.with-item.left {
      input {
        padding-left: 2.2rem;
      }

      label {
        left: 2.2rem;
      }

      svg {
        stroke: $disabled;
      }

      & > input:focus ~ .item {
        color: $main;
      }
    }

    input {
      border-radius: 1.5625em;
      border: 1px solid $textfield-border;
      background-color: transparent;
      padding: 0 1.4rem;

      &:hover {
        border-color: transparentize(black, .3);

        & + label {
          color: transparentize(black, .3);
        }
      }

      &:focus {
        border-color: $main;

        & + label {
          color: $main;
        }
      }

      &:invalid {
        border-color: transparentize($danger, .3);

        & + label {
          color: transparentize($danger, .3);
        }

        & ~ svg.item {
          stroke: transparentize($danger, .3);
        }

        &:focus ~ svg.item {
          stroke: transparentize($danger, .3);
        }

        & ~ .error {
          display: inline;
        }
      }
    }

    input:focus ~ svg.item {
      stroke: $main;
    }
  }

  input:invalid {
    box-shadow: none;
    border-bottom-color: $danger;
    background: $textfield-bg-error;
  }

  input:not(.outline):invalid {
    background-color: $textfield-bg-error;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  & > .error {
    display: none;
    font-size: .8rem;
    color: transparentize($danger, .3);
    font-weight: 500;
  }

  &.no-spinner > input[type="number"] {
    -moz-appearance: textfield;

    &::-webkit-inner-spin-button,
    &::-webkit-outer-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
  }
}

.form-field {
  display: flex;
  justify-content: space-between;
  margin-bottom: .8em;

  label {
    display: flex;
    flex-direction: column;
  }

  .name {
    font-size: 1.2rem;
    margin-bottom: .2em;
  }

  .desc {
    font-weight: 300;
    font-size: .9rem;
    line-height: 1.2rem;
  }

  .required {
    color: $main;
  }

  .text-field + .required {
    padding-left: 10px;
    margin: 5px 0 0 0;
    font-size: .8rem;
  }

  .text-field-wrapper .text-field {
    width: 100%;
    margin-bottom: 5px;

    &:only-child {
      margin-bottom: 20px;
    }
  }

  &.error {
    .text-field {
      input, textarea {
        box-shadow: none;
        border-bottom-color: $danger;
        background: $textfield-bg-error;
      }

      & + .required {
        color: $danger;
      }
    }

    .dropdown-shell {
      .btn.handle {
        color: $danger;

        & > svg {
          stroke: $danger;
        }

        &:hover:not(:disabled) {
          background: transparentize($danger, .95);
        }

        &:focus:not(:disabled) {
          background: transparentize($danger, .88);
        }
      }

      &.open .btn.handle {
        background: transparentize($danger, .95);
      }
    }
  }
}

/* Radio Buttons -------------------------------------- */

.radio {
  position: relative;

  & > input[type="radio"] {
    @include hide-accessible;
  }

  & > .icon {
    border-radius: 50%;
    width: 1.25rem;
    height: 1.25rem;
    cursor: pointer;
    border: 2px solid $light-gray;

    &::after {
      content: "";
      width: 2.25rem;
      height: 2.25rem;
      border-radius: 50%;
      left: 50%;
      position: absolute;
      top: 50%;
      transform: translate(-50%, -50%);
    }
  }

  & > input:disabled + .icon {
    cursor: not-allowed;
    background-color: lighten($light-gray, 6%);
  }

  & > input:checked + .icon {
    background-color: $main;
    border-color: $main;

    &::before {
      content: "";
      width: .5rem;
      height: .5rem;
      background-color: #fff;
      border-radius: 50%;
      left: 50%;
      position: absolute;
      top: 50%;
      transform: translate(-50%, -50%);
    }
  }

  & > input:disabled:checked + .icon {
    background-color: $disabled;
    border-color: lighten($disabled, 4%);
  }

  &:hover {
    & > input:not(:disabled) + .icon::after {
      background-color: transparentize(black, .95);
    }

    & > input:checked + .icon::after {
      background-color: transparentize($main, .95);
    }
  }

  & > input:focus + .icon::after {
    background-color: transparentize(black, .875);
  }

  & > input:focus:checked + .icon::after {
    background-color: transparentize($main, .875);
  }
}

.radio.colored > input + .icon::before {
  border-color: lightgray;
  border-color: rgb(var(--before-r), var(--before-g), var(--before-b));
}

.radio.colored:hover > input + .icon::after,
label:hover .radio.colored > input + .icon::after {
  background-color: rgba(0, 0, 0, .05);
  background-color: rgba(var(--r), var(--g), var(--b), .05);
}

.radio.colored > input:focus + .icon::after,
label:hover .radio.colored > input:focus + .icon::after {
  background-color: rgba(0, 0, 0, .125);
  background-color: rgba(var(--r), var(--g), var(--b), .125);
}

/* Checkboxes -------------------------------------- */

.checkbox {
  position: relative;
  display: inline-block;

  & > input[type="checkbox"] {
    @include hide-accessible;
  }

  & > .icon {
    border-radius: .25rem;
    width: 1rem;
    height: 1rem;
    border: 2px solid $light-gray;
    cursor: pointer;

    &::after {
      content: "";
      width: 2.25rem;
      height: 2.25rem;
      border-radius: 50%;
      left: 50%;
      position: absolute;
      top: 50%;
      transform: translate(-50%, -50%);
    }
  }

  &.round > .icon {
    border-radius: 50%;
    width: 1.375rem;
    height: 1.375rem;
  }

  & > input:checked + .icon {
    background-color: $main;
    border-color: $main;

    &::before {
      content: "";
      width: 9px;
      height: 6px;
      border: 0 solid white;
      border-bottom-width: 2px;
      border-left-width: 2px;
      left: 50%;
      position: absolute;
      top: 45%;
      transform: translate(-50%, -50%) rotate(-57deg) skew(-11deg);
      border-bottom-left-radius: 2px;
    }
  }
}

.checkbox:hover > .icon::after,
label:hover .checkbox > .icon::after {
  background-color: transparentize(black, .95);
}

.checkbox:hover > input:checked + .icon::after,
label:hover .checkbox > input:checked + .icon::after {
  background-color: transparentize($main, .95);
}

.checkbox > input:focus + .icon::after {
  background-color: transparentize(black, .875);
}

.checkbox > input:focus:checked + .icon::after,
label:hover .checkbox > input:focus:checked + .icon::after {
  background-color: transparentize($main, .875);
}

.clickable {
  cursor: pointer;
  user-select: none;
  -webkit-touch-callout: none;
}

.with-labels .checkbox {
  margin-right: .75rem;
}

.checkbox.colored > input + .icon::before {
  border-color: lightgray;
  border-color: rgb(var(--before-r), var(--before-g), var(--before-b));
}

.checkbox.colored:hover > input + .icon::after,
label:hover .checkbox.colored > input + .icon::after {
  background-color: rgba(0, 0, 0, .05);
  background-color: rgba(var(--r), var(--g), var(--b), .05);
}

.checkbox.colored > input:focus + .icon::after,
label:hover .checkbox.colored > input:focus + .icon::after {
  background-color: rgba(0, 0, 0, .125);
  background-color: rgba(var(--r), var(--g), var(--b), .125);
}

.max-reached input:not(:checked) + .icon {
  cursor: not-allowed;
}

/* Switches -------------------------------------- */

.switch {
  position: relative;
  width: 2rem;
  height: 1.125rem;
  border-radius: .75rem;
  border: 2px solid $off-state;
  cursor: pointer;

  &::before {
    content: "";
    width: 3.25rem;
    height: 2.375rem;
    border-radius: 1.125rem;
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
  }

  &.two-state {
    border-color: $main;

    & > .knob {
      background-color: $main;
    }
  }

  & > .knob {
    border-radius: 50%;
    width: .75rem;
    height: .75rem;
    background-color: $off-state;
    position: absolute;
    top: 50%;
    left: .25rem;
    transform: translateY(-50%);
    transition: transform 100ms;
  }
}

input:checked ~ .switch {
  border-color: $main;

  & > .knob {
    background-color: $main;
    transform: translateY(-50%) translateX(100%);
  }
}

input.switch-ctl {
  @include hide-accessible;
}

.switch:hover::before,
label:hover .switch::before {
  background-color: transparentize(black, .95);
}

input:checked ~ .switch:hover::before,
label:hover input:checked ~ .switch::before,
.switch.two-state:hover::before,
label:hover .switch.two-state::before {
  background-color: transparentize($main, .95);
}

input:focus ~ .switch::before {
  background-color: transparentize(black, .9);
}

input:focus:checked ~ .switch::before,
label:hover input:focus:checked ~ .switch::before,
input:focus ~ .switch.two-state::before,
label:hover input:focus ~ .switch.two-state::before {
  background-color: transparentize($main, .9);
}

.switch-wrapper {
  .state {
    color: $off-state;
    font-weight: 500;

    &.first {
      margin-right: .8em;
    }

    &.second {
      margin-left: .8em;
    }
  }

  input:not(:checked) ~ .first,
  input:checked ~ .second {
    color: $main;
  }
}

/* Cards -------------------------------------- */

.card {
  box-shadow: $shadow-0;
  background-color: #fff;
  border-radius: 1.25rem;
  padding: 1.5em;
  overflow: hidden;

  &.with-image {
    padding: 0;

    & > .image {
      width: 100%;
    }

    & > .content {
      padding: .8em 1.3em;
    }

    .title {
      font-size: 1.15rem;
      font-weight: 400;
    }

    .subtitle {
      font-size: .95rem;
      font-weight: 300;
    }
  }
}

/* Chips -------------------------------------- */

.chip-wrapper > input {
  clip: rect(0, 0, 0, 0);
  width: 1px;
  height: 1px;
  margin: -1px;
  overflow: hidden;
  position: absolute;
}

.chip {
  border-radius: 1.5625em;
  background-color: rgba(0, 0, 0, .08);
  color: #656565;
  padding: .6em .9em;
  font-weight: 500;

  &:not(.unclickable) {
    cursor: pointer;
    user-select: none;
    -webkit-touch-callout: none;
  }

  &.small {
    padding: .5em;
    font-size: .9rem;
    min-width: .9rem;
    text-align: center;
  }

  .ripple {
    background: transparentize($main, .9);
  }

  &.outline {
    border: 1px solid transparentize(black, .8);
    background-color: transparent;

    &.unclickable {
      border-color: $main;
    }

    .ripple {
      background: transparentize($main, .9);
    }
  }
}

input + .chip {
  &:hover {
    background-color: transparentize(black, .87);
  }

  &.outline:hover {
    background-color: transparentize(black, .94);
  }
}

input:disabled + .chip {
  background-color: transparentize(black, .97);
  color: #aaa;
  cursor: not-allowed;

  &:hover {
    background-color: transparentize(black, .97);
  }
}

input:focus + .chip {
  background-color: transparentize(black, .82);

  &.outline {
    background-color: transparentize(black, .9);
  }
}

input:checked + .chip {
  background-color: transparentize($main, .88);
  color: $main;

  &.outline {
    background-color: transparentize($main, .94);
    color: $main;
    border-color: $main;
  }
}

input:focus:checked + .chip {
  background-color: transparentize($main, .75);

  &.outline {
    background-color: transparentize($main, .88);
  }
}

.max-reached input:not(:checked) + .chip:not(.unclickable) {
  cursor: not-allowed;
}

input[type="checkbox"] + .chip {
  position: relative;

  &::before {
    border: 0 solid $main;
    content: "";
  }
}

input[type="checkbox"]:checked + .chip {
  padding-left: 2em;

  &::before {
    width: 5px;
    height: 9px;
    border-bottom-width: 2px;
    border-right-width: 2px;
    transform: translateY(-50%) rotate(45deg);
    position: absolute;
    left: .9em;
    top: 45%;
  }
}

/* Dialogs -------------------------------------- */

.dialog {
  border-radius: 1.5625em;
  box-shadow:
    0 3px 1px -2px rgba(0, 0, 0, .2),
    0 2px 2px 0    rgba(0, 0, 0, .14),
    0 1px 5px 0    rgba(0, 0, 0, .12);
  padding: 1.6em 2em 1.4em;
  position: relative;
  background-color: #fff;
  margin-left: .5em;
  margin-right: .5em;

  .title {
    display: flex;
    align-items: flex-end;
    font-size: 1.2rem;
    font-weight: 500;
    margin-bottom: .7em;
    padding-right: 1.5em;
    color: $main;

    .icon {
      stroke: $main;
      margin-right: .5em;
      flex-shrink: 0;
    }
  }

  .message .icon {
    stroke: $main;
  }

  & > .btn.close {
    position: absolute;
    top: .7em;
    right: .7em;
  }

  .message > .icon {
    margin-right: .7em;
    flex-shrink: 0;
  }

  .actions {
    display: flex;
    justify-content: flex-end;
    margin-top: .9em;

    & > .btn {
      margin-left: .5em;
    }
  }

  .constrain-width {
    max-width: 30em;
  }

  .consequences {
    display: block;
    margin-top: .3em;
    font-weight: 300;
  }

  &.danger {
    .title {
      color: $danger;

      .icon {
        stroke: $danger;
      }
    }
  }

  &.notice {
    box-shadow: none;
    border: 1px solid $main;
    padding: 1em 1.5em .6em;

    p {
      margin-top: .3em;
    }

    .message {
      display: flex;
      align-items: flex-start;
    }
  }

  .content {
    max-height: calc(100vh - 10em);
    overflow-y: auto;
  }
}

/* Carousel -------------------------------------- */

.carousel {
  position: relative;
}

.carousel .curr-slide > img {
  width: 100%;
}

.carousel .slides {
  position: absolute;
  top: 10px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
}

.carousel .slide > input {
  @include hide-accessible;
}

.carousel .slide > .icon {
  border-radius: 1.5625em;
  height: 7px;
  width: 1.2em;
  background-color: rgba(0, 0, 0, .2);
  margin: 0 3px;
  cursor: pointer;
}

.carousel .slide > .icon:hover {
  background-color: rgba(0, 0, 0, .28);
}

.carousel .slide > input:checked + .icon {
  background-color: rgba(255, 255, 255, .3);
  background-color: rgba(var(--r), var(--g), var(--b), .3);
}

.carousel .slide > input:checked + .icon:hover {
  background-color: rgba(255, 255, 255, .6);
  background-color: rgba(var(--r), var(--g), var(--b), .6);
}

.carousel .slide > input:focus + .icon {
  background-color: rgba(255, 255, 255, 1);
  background-color: rgba(var(--r), var(--g), var(--b), 1);
}

.carousel .prev-slide,
.carousel .next-slide {
  position: absolute;
  top: 50%;
  background-color: rgba(0, 0, 0, .25);
  transform: translateY(-50%);
  padding: .4em;
}

.carousel .prev-slide:hover,
.carousel .next-slide:hover {
  background-color: rgba(0, 0, 0, .32);
}

.carousel .prev-slide:focus,
.carousel .next-slide:focus {
  background-color: rgba(0, 0, 0, .4);
}

.carousel .prev-slide {
  left: 10px;
}

.carousel .next-slide {
  right: 10px;
}

.carousel .prev-slide svg,
.carousel .next-slide svg {
  stroke: #fff;
}

/* Labeled Elements -------------------------------------- */

.labeled {
  display: flex;

  &.text {
    flex-direction: column;
  }

  .text {
    display: flex;
    flex-direction: column;
  }

  .label {
    margin-bottom: .2em;
  }

  & > .icon {
    margin-right: .4em;
    margin-top: 1rem;
    height: 1.5rem;
    width: 1.5rem;
    stroke: $main;

    svg {
      stroke: $main;
    }
  }
}

/* Dropdowns -------------------------------------- */

.dropdown-shell, .relative-wrapper {
  position: relative;
}

.dropdown-shell > .handle > .chevron {
  margin-left: .5em;
  margin-bottom: -2px;
  transition: transform 100ms;
}

.dropdown {
  @include hide-accessible;

  background-color: white;
  box-shadow: $shadow-raised;
  border-radius: 20px;
  z-index: 1001;
  margin-top: 5px;
}

.dropdown.top {
  top: 0;
  transform: translateY(-100%);
  margin-top: -5px;
}

.dropdown-shell.open .dropdown {
  @include show-accessible;

  position: absolute;
}

.dropdown.right-edge {
  right: 0;
}

.dropdown-shell.open > .handle {
  background-color: transparentize($main, .88);

  & > .chevron {
    transform: rotate(180deg);
  }
}

.dropdown .btn.close {
  float: right;
  margin-right: .7em;
}

/* Accordions -------------------------------------- */

.accordion > section {
  @include hide-accessible;
}

.accordion > .panel.open + section {
  @include show-accessible;
}

.accordion > .panel .chevron {
  transition: transform 100ms;
  margin-bottom: -2px;
}

.accordion > .panel.open .chevron {
  transform: rotate(180deg);
}

/* Dots -------------------------------------- */

.dot {
  width: .75em;
  height: .75em;
  border-radius: 50%;
  margin-left: .5em;
  display: inline-block;
}

.dot.small {
  width: .6em;
  height: .6em;
}

.dot.new {
  background-color: $info;
}

.dot.attention {
  background-color: $attention;
}

.dot.active {
  background-color: transparentize($main, .5);
}

.dot.pending {
  background-color: transparentize($info, .5);
}

/* Tabs -------------------------------------- */

.tabs {
  display: flex;
  justify-content: space-between;
}

.tab > input[type="radio"] {
  @include hide-accessible;
}

.tab > .icon {
  border-bottom: 2px solid rgba(196, 196, 196, .6);
  font-weight: 500;
  color: $main;
  padding: .8em .3em .5em;
  cursor: pointer;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
  user-select: none;
}

.tab > .icon:hover {
  background: rgba(196, 196, 196, .1);
}

.tab > input:focus + .icon {
  background: rgba(196, 196, 196, .15);
}

.tab > input:checked + .icon {
  border-color: transparentize($main, .4);
}

/* Popovers -------------------------------------- */

.popover-container {
  position: relative;
}

.popover {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translate(-50%, -100%);
}

.popover-container:not(:hover) > .popover {
  display: none;
}

.popover.btn {
  background: rgba(100, 100, 100, .9);
  border-radius: 10px;
  font-size: .9rem;
  color: #fff;
  padding: 8px 10px;
}

.popover.btn:hover {
  background: rgba(70, 70, 70, .9);
}

.popover.btn:focus {
  background: rgba(50, 50, 50, .9);
}

.popover.btn > .icon {
  width: 18px;
  height: 18px;
  stroke: #fff;
}

/* Autocomplete -------------------------------------- */

.autocomplete-field {
  padding: 0 10px 1px;
  box-sizing: border-box;
  border-bottom: 1px solid $textfield-border;
  background-color: $textfield-bg;
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
  width: 100%;
  display: flex;
  align-items: center;
  flex-wrap: wrap;

  &:hover {
    background-color: darken($textfield-bg, 3%);
  }

  &.focus {
    background-color: darken($textfield-bg, 8%);
    border-bottom-width: 2px;
    border-color: lighten($main, 4%);
    padding-bottom: 0;
  }

  .dropdown-shell {
    height: 3.125rem;
    flex: 1;
  }

  input {
    font-family: $font-face;
    font-size: 1rem;
    font-weight: 300;
    border: none;
    background: none;
    outline: none;
    min-width: 13em;
    height: 100%;
    width: 100%;
  }

  .chip {
    font-weight: 400;
    font-size: .9rem;
    margin: .5em .5em .5em 0;
    display: flex;
    align-items: center;
    padding: 0 0 0 .9em;

    .btn {
      padding: .5em;
      margin-left: .2em;
    }

    .icon {
      width: 18px;
      height: 18px;
    }
  }

  .dropdown {
    padding: .5em 0;
    border-radius: .5em;
    margin-left: -1.5em;
    box-shadow: $shadow-raised;
    overflow-y: auto !important;

    li {
      padding: .8em 2.5em .8em 1.5em;
      cursor: pointer;

      &:hover:not(.loading) {
        background: transparentize($main, .92);
      }

      mark {
        background: none;
        color: $main;
        font-weight: 500;
      }

      .subtext {
        font-size: .9rem;
        font-weight: 300;
        margin-top: .2em;
      }

      &.load-more {
        font-weight: 500;
        color: $main;
        display: flex;
        align-items: center;
      }

      &.loading {
        padding-top: .5em;
        padding-bottom: .5em;
        display: flex;
        align-items: center;
        font-size: .9rem;
        cursor: wait;

        .lds-ellipsis {
          display: inline-block;
          position: relative;
          width: 32px;
          height: 32px;
          margin-right: .8em;

          div {
            position: absolute;
            top: 13px;
            width: 5px;
            height: 5px;
            border-radius: 50%;
            background: $main;
            animation-timing-function: cubic-bezier(0, 1, 1, 0);

            &:nth-child(1) {
              left: 3px;
              animation: lds-ellipsis1 .6s infinite;
            }

            &:nth-child(2) {
              left: 3px;
              animation: lds-ellipsis2 .6s infinite;
            }

            &:nth-child(3) {
              left: 13px;
              animation: lds-ellipsis2 .6s infinite;
            }

            &:nth-child(4) {
              left: 22px;
              animation: lds-ellipsis3 .6s infinite;
            }
          }

          @keyframes lds-ellipsis1 {
            0% {
              transform: scale(0);
            }

            100% {
              transform: scale(1);
            }
          }

          @keyframes lds-ellipsis3 {
            0% {
              transform: scale(1);
            }

            100% {
              transform: scale(0);
            }
          }

          @keyframes lds-ellipsis2 {
            0% {
              transform: translate(0, 0);
            }

            100% {
              transform: translate(10px, 0);
            }
          }
        }
      }
    }
  }
}

/* Star rating -------------------------------------- */

.star-rating {
  display: flex;
  flex-direction: row-reverse;
  justify-content: flex-end;

  label {
    padding: .5em;
    border-radius: 50%;
    cursor: pointer;

    &:hover {
      background: transparentize($main, .95);

      .star {
        stroke: transparentize($main, .6);
      }
    }

    &:hover ~ label {
      .star {
        stroke: transparentize($main, .6);
      }
    }

    .star {
      stroke: $light-gray;
      display: block;
    }
  }

  input[type="radio"] {
    @include hide-accessible;
  }

  input:checked + label .star,
  input:checked ~ input + label .star {
    stroke: $main;
  }
}

/* Snackbar -------------------------------------- */

.snackbar {
  position: fixed;
  z-index: 100;
  bottom: 3em;
  left: 5%;
  min-width: 16em;
  padding: .375em;
  width: max-content;
  max-width: 85%;
  display: flex;
  align-items: center;
  border-radius: 10px;
  visibility: hidden;
  background: lighten($dark, 5%);
  box-shadow: $shadow-raised;

  .text {
    padding-top: .8em;
    padding-bottom: .8em;
    margin-left: .625em;
    margin-right: .625em;
    color: white;
    flex: 1;
    font-size: .95rem;
  }

  .btn {
    color: lighten($main, 17%);
  }
}

.snackbar.open {
  visibility: visible;
}

/* Loading -------------------------------------- */

.loading {
  display: flex;
  align-items: center;

  .lds-ellipsis {
    display: inline-block;
    position: relative;
    width: 32px;
    height: 32px;
    margin-right: .8em;

    div {
      position: absolute;
      top: 13px;
      width: 5px;
      height: 5px;
      border-radius: 50%;
      background: $main;
      animation-timing-function: cubic-bezier(0, 1, 1, 0);

      &:nth-child(1) {
        left: 3px;
        animation: lds-ellipsis1-small .6s infinite;
      }

      &:nth-child(2) {
        left: 3px;
        animation: lds-ellipsis2-small .6s infinite;
      }

      &:nth-child(3) {
        left: 13px;
        animation: lds-ellipsis2-small .6s infinite;
      }

      &:nth-child(4) {
        left: 22px;
        animation: lds-ellipsis3-small .6s infinite;
      }
    }

    @keyframes lds-ellipsis1-small {
      0% {
        transform: scale(0);
      }

      100% {
        transform: scale(1);
      }
    }

    @keyframes lds-ellipsis3-small {
      0% {
        transform: scale(1);
      }

      100% {
        transform: scale(0);
      }
    }

    @keyframes lds-ellipsis2-small {
      0% {
        transform: translate(0, 0);
      }

      100% {
        transform: translate(10px, 0);
      }
    }
  }
}

/* Date pickers -------------------------------------- */

.date-picker {
  .range-controls {
    display: flex;
    justify-content: space-between;
    padding: .5em 1em;

    .btn {
      padding: .5em .8em;

      &.selected {
        background-color: transparentize($main, .88);
      }
    }
  }

  .month-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 0 1em;
    border: 0 solid $light-gray;
    border-top-width: 1px;
    border-bottom-width: 1px;
    padding: .3em 0;
    color: $main;
    font-weight: 500;
    white-space: nowrap;

    .btn {
      padding: .5rem;

      .icon {
        width: 1rem;
        height: 1rem;
        stroke-width: 3;
      }
    }
  }

  .weekdays {
    margin: 1em 1em .5em;
    display: flex;

    & > .weekday {
      color: lighten($dark, 15%);
      font-size: .8rem;
      width: 14.285714285714286%;  // 100% / 7
      text-align: center;
    }
  }

  .days {
    display: flex;

    .day {
      width: 14.285714285714286%;  /* 100% / 7 */
      display: flex;
      align-items: center;
      justify-content: center;
      position: relative;

      &:last-child {
        padding-right: 1em;
      }

      &:first-child {
        padding-left: 1em;
      }

      & > .btn {
        font-weight: 400;
        font-size: .9rem;
        color: black;
        justify-content: center;
        margin: 1px;
        z-index: 2;
        width: 2.25rem;
        height: 2.25rem;
      }

      &.today > .btn {
        color: $main;
      }

      &.selected .btn {
        background-color: desaturate(lighten($main, 10%), 20%);
        color: white;
      }

      &.outside > .btn {
        color: $disabled;
      }

      &.in-range::before {
        background-color: transparentize($main, .75);
        content: "";
        height: 2.25rem;
        position: absolute;
        left: 0;
        right: 0;
        top: 1px;
        z-index: 1;
      }

      &.outside.selected > .btn {
        color: #fff;
      }

      &.start {
        &::before {
          right: 0;
          left: unset;
          width: calc(1.125rem + 1px);
        }
      }

      &.end {
        &::before {
          left: 0;
          right: unset;
          width: calc(1.125rem + 1px);
        }
      }

      &.start.end::before {
        width: 0;
      }
    }
  }
}

